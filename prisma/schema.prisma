
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String        @id @default(cuid())
  username            String        @unique
  name                String
  password            String // IMPORTANT: Store hashed passwords in production!
  role                UserRole
  canViewCalendarsOf  String[] // Stores User IDs
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  createdAppointments Appointment[] @relation("CreatedBy")
  assignedAppointments Appointment[] @relation("AssignedTo")
  updatedAppointments Appointment[] @relation("UpdatedBy")
  themeSettings       ThemeSettings? @relation("UserThemeSettings")
}

model Appointment {
  id            String    @id @default(cuid())
  title         String
  date          DateTime  @db.Date // Store only date part
  time          String // HH:mm format
  assignedToId  String
  assignedTo    User      @relation("AssignedTo", fields: [assignedToId], references: [id])
  location      String?
  notes         String?   @db.Text
  contactPerson String?
  participants  String?   @db.Text
  isShared      Boolean   @default(false)
  isCompleted   Boolean   @default(false)
  createdAt     DateTime  @default(now())
  createdById   String
  createdBy     User      @relation("CreatedBy", fields: [createdById], references: [id])
  updatedAt     DateTime? @updatedAt
  updatedById   String?
  updatedBy     User?     @relation("UpdatedBy", fields: [updatedById], references: [id])

  @@index([assignedToId])
  @@index([createdById])
  @@index([updatedById])
}

model ThemeSettings {
  id                  String   @id @default(cuid())
  userId              String   @unique // Each user can have one theme setting for now, or make it global
  user                User     @relation("UserThemeSettings", fields: [userId], references: [id])
  appName             String
  logoLightModeUrl    String   @db.Text
  logoDarkModeUrl     String   @db.Text
  backgroundColor     String
  foregroundColor     String
  cardColor           String
  cardForegroundColor String
  popoverColor        String
  popoverForegroundColor String
  primaryColor        String
  primaryForegroundColor String
  secondaryColor      String
  secondaryForegroundColor String
  mutedColor          String
  mutedForegroundColor String
  accentColor         String
  accentForegroundColor String
  destructiveColor    String
  destructiveForegroundColor String
  borderColor         String
  inputColor          String
  ringColor           String
  sidebarBackgroundColor  String
  sidebarForegroundColor  String
  sidebarPrimaryColor     String
  sidebarPrimaryForegroundColor String
  sidebarAccentColor      String
  sidebarAccentForegroundColor String
  sidebarBorderColor      String
  sidebarRingColor        String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@index([userId])
}

enum UserRole {
  Admin
  Prefeito
  Vice_prefeito // Prisma enums cannot have spaces
  Visualizador
}
